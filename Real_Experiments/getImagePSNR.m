%This function returns the PSNR values for the reconstructed images
%Parameters
%paths_to_rep_err: A string array containing paths to .mat files
%generated by LSRImageDenoising

%Output
%PSNR : A struct with the PSNR values of each algorithm used in denoising,
%the value for each field in this struct is a 2x1 array for each of the 2
%sigma values used 10 and 50
function [PSNR] = getImagePSNR(paths_to_rep_err)
    %Creates a structure to be used to hold the total
    %reconstruction errors for each algorithm used in denoising
    Rep_errs_total = struct('Rep_err_test_KSVD_OMP',[],'Rep_err_test_BCD_OMP',[],'Rep_err_test_SEDIL',...
                [],'Rep_err_test_sum_BCD_OMP',[],'Rep_err_test_STARK_OMP',[], 'Rep_err_test_TeFDiL_OMP',...
                [],'Rep_err_test_TeFDiL2_OMP',[]);
    if(isstring(paths_to_rep_err))
        %For each of the simulation run we concatenate the monte carlos for
        %a total of 25 representation errors for each sigma value per
        %algorithm
        for path=paths_to_rep_err
            simResults = load(path, 'Rep_err_test_KSVD_OMP','Rep_err_test_BCD_OMP','Rep_err_test_SEDIL',...
                'Rep_err_test_sum_BCD_OMP','Rep_err_test_STARK_OMP', 'Rep_err_test_TeFDiL_OMP',...
                'Rep_err_test_TeFDiL2_OMP');
            simResultNames = fieldnames(simResults);
          
            for k = 1:length(simResultNames)
                rep_err = simResultNames{k};
                originalRepErr = Rep_errs_total.(rep_err);
                Rep_errs_total.(rep_err) = cat(2,originalRepErr,simResults.(rep_err).');
            end
            
            algos = ["KSVD", "BCD", "SeDiL", "BCD_rnk", "STARK", "TeFDiL","TeFDiL_rnk"];
            for i = 1:length(simResultNames)
                rep_err = simResultNames{i};
                PSNR.(algos(i)) = -10*log10(mean(Rep_errs_total.(rep_err),2));
            end
        end
    else
        fprintf('Error: Please make sure you are entering a string array\n')
    end
    %Prints out table for PSNR
    fprintf('%12s\t',["KSVD","SeDiL","BCD","TeFDiL","BCD(rnk>1)","STARK","TeFDiL(r>1)"]);
    fprintf('\nsig=10\t');
    fprintf('%5.4f\t',PSNR.KSVD(1));
    fprintf('%12.4f\t',PSNR.SeDiL(1));
    fprintf('%12.4f\t',PSNR.BCD(1));
    fprintf('%12.4f\t',PSNR.TeFDiL(1));
    fprintf('%12.4f\t',PSNR.BCD_rnk(1));
    fprintf('%12.4f\t',PSNR.STARK(1));
    fprintf('%12.4f\t',PSNR.TeFDiL_rnk(1));

    fprintf('\nsig=50\t');
    fprintf('%5.4f\t',PSNR.KSVD(2));
    fprintf('%12.4f\t',PSNR.SeDiL(2));
    fprintf('%12.4f\t',PSNR.BCD(2));
    fprintf('%12.4f\t',PSNR.TeFDiL(2));
    fprintf('%12.4f\t',PSNR.BCD_rnk(2));
    fprintf('%12.4f\t',PSNR.STARK(2));
    fprintf('%12.4f\n',PSNR.TeFDiL_rnk(2));
end